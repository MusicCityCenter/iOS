//
//  MCCViewController.m
//  Music City Center
//
//  Created by Clark Perkins on 2/3/14.
//  Copyright (c) 2014 Music City Center. All rights reserved.
//

#import "MCCMapViewController.h"
#import "MCCFloorViewController.h"
#import "UIView+Screenshot.h"
#import <GPUImage/GPUImage.h>

static NSString * const identifier = @"Cell";

<<<<<<< HEAD
@interface MCCMapViewController () <UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate>

@property (strong, nonatomic) GPUImageView *blurView;
@property (strong, nonatomic) GPUImageiOSBlurFilter *blurFilter;
=======

@interface MCCMapViewController () <UITableViewDataSource, UITableViewDelegate, UISearchDisplayDelegate>

@property (strong, nonatomic) NSArray* contents;
@property (strong, nonatomic) NSMutableArray* searchContents;
>>>>>>> aed01bfd1e3206baea0adeae96d6d845b8d3ed1d

@end

@implementation MCCMapViewController

<<<<<<< HEAD
#pragma mark - Custom Getter

- (GPUImageiOSBlurFilter *)blurFilter {
    if (!_blurFilter) {
        _blurFilter = [[GPUImageiOSBlurFilter alloc] init];
        _blurFilter.blurRadiusInPixels = 4.0f;
    }
    
    return _blurFilter;
}

#pragma mark - View Controller Lifecycle

=======
- (NSMutableArray *)searchContents {
    if (!_searchContents) {
        _searchContents = [[NSMutableArray alloc] init];
    }
    return _searchContents;
}

>>>>>>> aed01bfd1e3206baea0adeae96d6d845b8d3ed1d
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.contents = [NSArray arrayWithObjects:
                     // L4
                     @"Grand Ballroom", @"L4 Balcony",
                     @"Room 401", @"Room 402", @"Room 403",
                     // L3
                     @"Hall A1", @"Hall A2", @"Hall B", @"Hall C", @"Hall D",
                     @"L3 Terrace", @"Lounge",
                     // L2
                     @"L2 Balcony",
                     @"Room 201", @"Room 202", @"Room 203", @"Room 204", @"Room 205",
                     @"Room 206", @"Room 207", @"Room 208", @"Room 209", @"Room 210",
                     @"Room 211", @"Room 212", @"Room 213", @"Room 214",
                     // L1M
                     @"Davidson Ballroom", @"Board Room A", @"Board Room B", @"L1M Balcony",
                     // L1
                     @"L1 Terrace",
                     @"Room 101", @"Room 102", @"Room 103", @"Room 104", @"Room 105",
                     @"Room 106", @"Room 107", @"Room 108", @"Room 109", @"Room 110",
                     nil];
    
    
    [self.searchDisplayController.searchResultsTableView registerClass:[UITableViewCell class]
                                                forCellReuseIdentifier:identifier];
<<<<<<< HEAD
    self.searchDisplayController.searchResultsTableView.backgroundColor = [UIColor clearColor];
    
    self.blurView = [[GPUImageView alloc] initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 0)];
    self.blurView.clipsToBounds = YES;
    self.blurView.layer.contentsGravity = kCAGravityBottom;
    self.blurView.layer.contentsRect = CGRectMake(0.0f, 0.0f, 1.0f, 0.0f);
    
    [self.view addSubview:self.blurView];
=======
    
    // Put the search bar in the nav bar
    [self.searchDisplayController.searchBar removeFromSuperview];
    self.searchDisplayController.displaysSearchBarInNavigationBar = YES;
    
    // Set the tableview background to clear so the toolbar can be seen underneath
    self.searchDisplayController.searchResultsTableView.backgroundColor = [UIColor clearColor];
    
    // Set the table background view to be a toolbar - the toolbar provides the 'blur' effect
    // **** This is kind of a hack, so I'm not sure if we should actually do this ****
    UIToolbar* blur = [[UIToolbar alloc] init];
    
    blur.barStyle = UIBarStyleBlackTranslucent;
    
    self.searchDisplayController.searchResultsTableView.backgroundView = blur;
>>>>>>> aed01bfd1e3206baea0adeae96d6d845b8d3ed1d
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

// Find all matching strings
- (void)findMatches {
    [self.searchContents removeAllObjects];
    for (NSString* str in self.contents) {
        NSRange range = [str rangeOfString:self.searchDisplayController.searchBar.text options:NSCaseInsensitiveSearch];
        if (range.location != NSNotFound) {
            [self.searchContents addObject:str];
        }
    }
}

#pragma mark - Table View Data Source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    [self findMatches];
    return [self.searchContents count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *identifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier
                                                            forIndexPath:indexPath];
    
    cell.textLabel.text = [self.searchContents objectAtIndex:indexPath.row];
    
    // Set the backround to clear so you can see the blur effect underneath
    cell.textLabel.textColor = [UIColor whiteColor];
    cell.backgroundColor = [UIColor clearColor];
    
    cell.backgroundColor = [UIColor clearColor];
    
    return cell;
}

#pragma mark - Search Display Delegate

- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)controller {
    [self updateBlur];
    
    CGRect deviceSize = [UIScreen mainScreen].bounds;
    
    [UIView animateWithDuration:0.25f animations:^(void){
        self.blurView.frame = CGRectMake(0, 66.0f, deviceSize.size.width, deviceSize.size.height);
        self.blurView.layer.contentsRect = CGRectMake(0.0f, (66.0f / deviceSize.size.height), 1.0f, 1.0f);
        self.blurView.layer.contentsScale = 2.0f;
    }];
}

- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)controller {
    [UIView animateWithDuration:0.25f animations:^{
        self.blurView.frame = CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, 0);
        self.blurView.layer.contentsRect = CGRectMake(0.0f, 0.0f, 1.0f, 0.0f);
    }];
}

#pragma mark - Blur Effect

- (void)updateBlur {
    UIImage *image = [self.view.superview convertViewToImage];
    
    GPUImagePicture *picture = [[GPUImagePicture alloc] initWithImage:image];
    [picture addTarget:self.blurFilter];
    [self.blurFilter addTarget:self.blurView];
    
    [picture processImageWithCompletionHandler:^{
        [self.blurFilter removeAllTargets];
    }];
}

@end
